{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/src/components/TaskList/TaskList.js\";\nimport React, { Component } from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport ProjectList from './\bProjectList/ProjectList.js';\nimport './TaskList.css';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.loadProjectList = function (user) {\n      console.log(user);\n      fetch('http://localhost:3000/ProjectList', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          Projectlist: data\n        });\n      });\n    };\n\n    _this.loadTask = function (project_identifier) {\n      console.log(project_identifier);\n      fetch('http://localhost:3000/getTask', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_identifier: project_identifier\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (Tasks) {\n        _this.set;\n        console.log(data);\n      });\n    };\n\n    _this.AddNewProject = function () {\n      var project_identifier = +new Date() + 'project' + Math.floor(Math.random() * 99999999999);\n      var user = _this.props.user;\n      fetch('http://localhost:3000/Projects', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user,\n          project_name: 'new project',\n          project_identifier: project_identifier\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          Projectlist: data\n        });\n\n        console.log(_this.state.Projectlist);\n      });\n    };\n\n    _this.handleAddEvent = function () {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString();\n      fetch('http://localhost:3000/Tasks', {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id,\n          name: '',\n          description: '',\n          complete: 0\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        data.sort(function (a, b) {\n          return a.index - b.index;\n        });\n\n        _this.setState({\n          Tasks: data\n        });\n      });\n    };\n\n    _this.handleAddSection = function () {\n      var id = 'section' + Math.floor(Math.random() * 1000);\n      fetch('http://localhost:3000/Tasks', {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id,\n          name: '---Section---',\n          description: '',\n          complete: 0\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        data.sort(function (a, b) {\n          return a.index - b.index;\n        });\n\n        _this.setState({\n          Tasks: data\n        });\n      });\n    };\n\n    _this.handleTask = function (e) {\n      var id = e.target.id;\n      var name = e.target.value;\n      console.log(id);\n      fetch('http://localhost:3000/TaskName', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          name: name\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (Tasks) {\n        var clickedTask = Tasks.find(function (Task) {\n          if (Task.id === id) {\n            return Task;\n          }\n\n          return false;\n        });\n\n        _this.setState({\n          Tasks: Tasks\n        });\n\n        _this.setState({\n          clickedTask: clickedTask\n        });\n      });\n    };\n\n    _this.getInfo = function (e) {\n      var id = e.target.id;\n      fetch('http://localhost:3000/TaskInfo', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (clickedTask) {\n        _this.setState({\n          clickedTask: clickedTask\n        });\n\n        console.log(_this.state.clickedTask);\n      });\n    };\n\n    _this.onHandleDescription = function (e) {\n      var id = e.target.id;\n      var description = e.target.value;\n      fetch('http://localhost:3000/TaskDescription', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          description: description\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (Tasks) {\n        var clickedTask = Tasks.find(function (Task) {\n          if (Task.id === id) {\n            return Task;\n          }\n\n          return false;\n        });\n\n        _this.setState({\n          Tasks: Tasks\n        });\n\n        _this.setState({\n          clickedTask: clickedTask\n        });\n      });\n    };\n\n    _this.toggleTaskComplete = function (e) {\n      var complete = _this.state.clickedTask.complete;\n      var id = _this.state.clickedTask.id;\n      var toggle = '';\n\n      if (complete == false) {\n        toggle = 1;\n      } else if (complete == true) {\n        toggle = 0;\n      }\n\n      if (complete) {\n        fetch('http://localhost:3000/TaskComplete', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: id,\n            complete: toggle\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (Tasks) {\n          var clickedTask = Tasks.find(function (Task) {\n            if (Task.id === id) {\n              return Task;\n            }\n\n            return false;\n          });\n\n          _this.setState({\n            Tasks: Tasks\n          });\n\n          _this.setState({\n            clickedTask: clickedTask\n          });\n        });\n      } else {\n        return false;\n      }\n    };\n\n    _this.filterText = function (e) {\n      var filterInput = e.target.value;\n\n      _this.setState({\n        filterText: filterInput\n      });\n    };\n\n    _this.state = {\n      Projectlist: [],\n      Tasks: [],\n      clickedTask: {\n        id: '',\n        name: '',\n        description: '',\n        complete: ''\n      },\n      filterText: ''\n    };\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = this.props.user;\n      this.loadProjectList(user);\n      console.log(user);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Project-Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"User\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Hi, \", this.props.user.name), React.createElement(\"div\", {\n        className: \"NewProject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.AddNewProject,\n        id: \"NewProjectBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"New Project\")), React.createElement(ProjectList, {\n        Projectlist: this.state.Projectlist,\n        loadTask: this.loadTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"SignOut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(SignOut, {\n        onRouteChange: this.props.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"TaskListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"Tasks-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addBtn\",\n        onClick: this.handleAddEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"New Task\"), React.createElement(\"button\", {\n        className: \"sectionBtn\",\n        onClick: this.handleAddSection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"New Section\"), React.createElement(FilterBox, {\n        filterText: this.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Tasks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        Tasks: this.state.Tasks,\n        onTaskUpdate: this.handleTask.bind(this),\n        onTaskInfo: this.getInfo.bind(this),\n        filterText: this.state.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"TaskInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"TaskInfo-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(MarkBtn, {\n        clickedTask: this.state.clickedTask,\n        toggleTaskComplete: this.toggleTaskComplete.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), React.createElement(TaskInfo, {\n        clickedTask: this.state.clickedTask,\n        onTaskUpdate: this.handleTask.bind(this),\n        onHandleDescription: this.onHandleDescription.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/Project-todolist/Frontend/src/components/TaskList/TaskList.js"],"names":["React","Component","Tasks","TaskInfo","SignOut","MarkBtn","FilterBox","ProjectList","TaskList","props","loadProjectList","user","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","Projectlist","loadTask","project_identifier","set","AddNewProject","Date","Math","floor","random","project_name","state","handleAddEvent","id","toString","name","description","complete","sort","a","b","index","handleAddSection","handleTask","e","target","value","clickedTask","find","Task","getInfo","onHandleDescription","toggleTaskComplete","toggle","filterText","filterInput","onRouteChange","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport ProjectList from './\bProjectList/ProjectList.js';\nimport './TaskList.css';\n\nclass TaskList extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Projectlist: [],\n            Tasks: [],\n\n            clickedTask: {\n                id: '',\n                name: '',\n                description: '',\n                complete: '',\n            },\n\n            filterText: '',\n        }\n    }\n\n    componentDidMount(){\n        var user = this.props.user;\n        this.loadProjectList(user);\n        console.log(user);\n    }\n\n    loadProjectList = (user) => {\n        console.log(user);\n        fetch('http://localhost:3000/ProjectList', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                user\n            })\n        })\n        .then(response => response.json())\n        .then(data => this.setState({ Projectlist: data }))\n    }\n\n    loadTask = (project_identifier) => {\n        console.log(project_identifier);\n\n        fetch('http://localhost:3000/getTask', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                project_identifier\n            })\n        })\n        .then(response => response.json())\n        .then(Tasks => {\n            this.set\n            console.log(data)})\n    }\n\n    AddNewProject = () => {\n        var project_identifier = (+ new Date() + 'project' + Math.floor( Math.random() * 99999999999 ));\n        var user = this.props.user;\n\n        fetch('http://localhost:3000/Projects',{\n            method: 'post',\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                user,\n                project_name: 'new project',\n                project_identifier,\n            })\n        })\n        .then(response => response.json())\n        .then(data => {this.setState({ Projectlist: data })\n            console.log(this.state.Projectlist);\n        })\n    }\n\n    //Event of adding new Task in the Tasktable\n    handleAddEvent = () => {\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString();\n        \n        fetch('http://localhost:3000/Tasks', {\n            method: 'post',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                id: id,\n                name: '',\n                description: '',\n                complete: 0,\n            }) \n        })\n            .then(response => response.json())\n            .then(data => {\n                data.sort(function(a, b){\n                    return a.index - b.index;\n                })\n\n                this.setState({ Tasks: data})\n            })\n    }\n\n    //Event of adding new section in the Tasktable\n    handleAddSection = () => {\n        var id = ('section'+ Math.floor(Math.random() * 1000));\n        \n        fetch('http://localhost:3000/Tasks', {\n            method: 'post',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                id: id,\n                name: '---Section---',\n                description: '',\n                complete: 0,\n            }) \n        })\n            .then(response => response.json())\n            .then(data => {\n                data.sort(function(a, b){\n                    return a.index - b.index;\n                })\n                this.setState({ Tasks: data})\n            })\n    }\n\n    //Event of editing the selected task\n    handleTask = (e) => {\n        var id = e.target.id;\n        var name = e.target.value;\n        console.log(id);\n\n        fetch('http://localhost:3000/TaskName', {\n           method: 'put',\n           headers: { 'Content-Type': 'application/json' },\n           body: JSON.stringify({\n               id: id,\n               name: name,\n           })\n        })\n            .then(response => response.json())\n            .then(Tasks => {\n                var clickedTask = Tasks.find(\n                    (Task) => {\n                        if(Task.id === id){\n                            return Task;\n                        }\n                        return false;\n                    }\n                )\n\n                this.setState({Tasks});\n                this.setState({clickedTask})\n\n            })\n    }\n    \n\n\n    //get the name of the selected task and show on the title bar in the task info\n    getInfo = (e) => {\n        var id = e.target.id;\n\n        fetch('http://localhost:3000/TaskInfo', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id\n            })\n        })\n            .then(response => response.json())\n            .then(clickedTask => {\n                this.setState({ clickedTask })\n                console.log(this.state.clickedTask);\n            })\n    }\n\n    //get the description of the selected Task\n    onHandleDescription = (e) => {\n        var id = e.target.id;\n        var description = e.target.value;\n\n        fetch('http://localhost:3000/TaskDescription', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id,\n                description\n            })\n        })\n            .then(response => response.json())\n            .then(Tasks => {\n                var clickedTask = Tasks.find(\n                    (Task) => {\n                        if(Task.id === id){\n                            return Task;\n                        }\n                        return false;\n                    }\n                )\n\n                this.setState({Tasks});\n                this.setState({clickedTask})\n            })\n    }\n\n    \n    //function of toggling the selected Task to completed or incomplete\n    toggleTaskComplete = (e) => {\n        var complete = this.state.clickedTask.complete;\n        var id =this.state.clickedTask.id;\n        var toggle = '';\n\n        if (complete == false){\n            toggle = 1;\n        } else if (complete == true){\n            toggle = 0;\n        }\n\n        if (complete){\n            fetch('http://localhost:3000/TaskComplete', {\n                method: 'put',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    id: id,\n                    complete: toggle\n                })\n            })\n                .then(response => response.json())\n                .then(Tasks => {\n                    var clickedTask = Tasks.find(\n                        (Task) => {\n                            if(Task.id === id){\n                                return Task;\n                            }\n                            return false;\n                        }\n                    )\n    \n                    this.setState({Tasks});\n                    this.setState({clickedTask})\n                })\n        } else {\n            return false;\n        }\n    }\n\n    //function of filtering tasks by input keyword\n    filterText = (e) => {\n        var filterInput = e.target.value;\n        this.setState({ filterText: filterInput })\n    }\n\n    render(){\n        return (\n            <div className='Window'>\n                <div className='Project-Panel'>\n                    <div className='User'>Hi, {this.props.user.name}</div>\n                    <div className='NewProject'>\n                        <button onClick={this.AddNewProject} id='NewProjectBtn'>New Project</button>\n                    </div>\n                    <ProjectList Projectlist={this.state.Projectlist} loadTask={this.loadTask}/>\n                </div>\n                <div className='SignOut'>\n                        <SignOut onRouteChange={this.props.onRouteChange}/>\n                </div>\n                    <div className='TaskListDiv'>\n                        <header className='Tasks-header-table'>                    \n                            <button className='addBtn' onClick={this.handleAddEvent.bind(this)}>New Task</button>\n                            <button className='sectionBtn' onClick={this.handleAddSection.bind(this)}>New Section</button>\n                            <FilterBox filterText={this.filterText}/>\n                        </header>\n                        <div className='Tasks'>\n                            <Tasks\n                                Tasks={this.state.Tasks} \n                                onTaskUpdate={this.handleTask.bind(this)} \n                                onTaskInfo={this.getInfo.bind(this)}\n                                filterText={this.state.filterText}\n                            />\n                        </div>\n                    </div>  \n                    <div className='TaskInfo'>\n                        <header className='TaskInfo-header-table'>\n                            <MarkBtn \n                                clickedTask={this.state.clickedTask} \n                                toggleTaskComplete={this.toggleTaskComplete.bind(this)}\n                                />\n                        </header>\n                        <TaskInfo \n                            clickedTask={this.state.clickedTask}\n                            onTaskUpdate={this.handleTask.bind(this)}\n                            onHandleDescription={this.onHandleDescription.bind(this)}\n                        />\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}