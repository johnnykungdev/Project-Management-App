{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/Project-todolist/src/components/TaskList/TaskList.js\";\nimport React, { Component } from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport './TaskList.css';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.handleAddEvent = function () {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString();\n      var Task = {\n        id: id,\n        name: '',\n        description: '',\n        complete: ''\n      };\n\n      _this.state.Tasks.push(Task);\n\n      _this.setState(_this.state.Tasks);\n    };\n\n    _this.handleAddSection = function () {\n      var id = 'section' + Math.floor(Math.random() * 1000);\n      var section = {\n        id: id,\n        name: '-- Section --',\n        description: '',\n        complete: ''\n      };\n\n      _this.state.Tasks.push(section);\n\n      _this.setState(_this.state.Tasks);\n    };\n\n    _this.handleTask = function (e) {\n      var item = {\n        id: e.target.id,\n        name: e.target.value\n      };\n\n      var currentTasks = _this.state.Tasks.slice();\n\n      var newTasks = currentTasks.map(function (Task) {\n        if (String(item.id) === String(Task.id)) {\n          Task.name = item.name;\n        }\n\n        return Task;\n      });\n\n      _this.setState({\n        Tasks: newTasks\n      });\n    };\n\n    _this.getName = function (e) {\n      var id = e.target.id;\n      var Tasks = _this.state.Tasks;\n      var id_array = Tasks.map(function (Task) {\n        return Task.id;\n      });\n      var order = id_array.indexOf(id);\n      var clickedTask = _this.state.Tasks[order];\n      console.log(_this.state.clickedTask.name);\n\n      _this.setState({\n        clickedTask: clickedTask\n      });\n    };\n\n    _this.getDescription = function (e) {\n      var id = e.target.id;\n      var newTask = _this.state.clickedTask;\n      newTask.description = e.target.value;\n\n      _this.setState({\n        clickedTask: newTask\n      });\n    };\n\n    _this.toggleComplete = function (e) {\n      var Class = e.target.className;\n      var newTask = _this.state.clickedTask;\n\n      if (newTask.complete == true) {\n        newTask.complete = false;\n\n        _this.setState({\n          clickedTask: newTask\n        });\n      } else if (newTask.complete == false) {\n        newTask.complete = true;\n\n        _this.setState({\n          clickedTask: newTask\n        });\n      }\n    };\n\n    _this.filterText = function (e) {\n      var filterInput = e.target.value;\n\n      _this.setState({\n        filterText: filterInput\n      });\n    };\n\n    _this.state = {\n      Tasks: [{\n        id: 'qweqrasr',\n        name: 'clean the refrig',\n        description: 'Mom wants you to clean the refrig before she comes back tonight.',\n        complete: true\n      }, {\n        id: 'qwrqrwr',\n        name: 'cook the dinner',\n        description: 'prepare the dinner before 6pm.',\n        complete: true\n      }],\n      clickedTask: {\n        id: '',\n        name: '',\n        description: '',\n        complete: ''\n      },\n      filterText: ''\n    };\n    return _this;\n  } //Event of adding new Task in the Tasktable\n\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Task-Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SignOut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(SignOut, {\n        onRouteChange: this.props.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"TaskListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"Tasks-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addBtn\",\n        onClick: this.handleAddEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"New Task\"), React.createElement(\"button\", {\n        className: \"sectionBtn\",\n        onClick: this.handleAddSection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"New Section\"), React.createElement(FilterBox, {\n        filterText: this.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Tasks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        Tasks: this.state.Tasks,\n        onTaskUpdate: this.handleTask.bind(this),\n        onTaskInfo: this.getName.bind(this),\n        filterText: this.state.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"TaskInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"TaskInfo-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(MarkBtn, {\n        clickedTask: this.state.clickedTask,\n        toggleComplete: this.toggleComplete.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(TaskInfo, {\n        clickedTask: this.state.clickedTask,\n        onTaskUpdate: this.handleTask.bind(this),\n        getDescription: this.getDescription.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/Project-todolist/src/components/TaskList/TaskList.js"],"names":["React","Component","Tasks","TaskInfo","SignOut","MarkBtn","FilterBox","TaskList","props","handleAddEvent","id","Date","Math","floor","random","toString","Task","name","description","complete","state","push","setState","handleAddSection","section","handleTask","e","item","target","value","currentTasks","slice","newTasks","map","String","getName","id_array","order","indexOf","clickedTask","console","log","getDescription","newTask","toggleComplete","Class","className","filterText","filterInput","onRouteChange","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport './TaskList.css';\n\nclass TaskList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Tasks: [\n                {\n                    id: 'qweqrasr',\n                    name: 'clean the refrig',\n                    description: 'Mom wants you to clean the refrig before she comes back tonight.',\n                    complete: true,\n                },\n                {\n                    id: 'qwrqrwr',\n                    name: 'cook the dinner',\n                    description: 'prepare the dinner before 6pm.',\n                    complete: true,\n                }\n            ],\n\n            clickedTask: {\n                id: '',\n                name: '',\n                description: '',\n                complete: '',\n            },\n\n            filterText: '',\n        }\n    }\n\n    //Event of adding new Task in the Tasktable\n    handleAddEvent = () => {\n    var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString();\n    var Task = {\n        id: id,\n        name: '',\n        description: '',\n        complete: '',\n        }\n    \n        this.state.Tasks.push(Task);\n        this.setState(this.state.Tasks);\n    }\n\n    //Event of adding new section in the Tasktable\n    handleAddSection = () => {\n        var id = ('section'+ Math.floor(Math.random() * 1000));\n        var section = {\n            id: id,\n            name: '-- Section --',\n            description: '',\n            complete: '',\n        }\n\n        this.state.Tasks.push(section);\n        this.setState(this.state.Tasks);\n    }\n\n    //Event of editing the selected task\n    handleTask = (e) => {\n        var item = {\n            id: e.target.id,\n            name: e.target.value,\n        }\n        \n        var currentTasks = this.state.Tasks.slice();\n        var newTasks = currentTasks.map(\n            function (Task){\n                if (String(item.id) === String(Task.id)){\n                    Task.name = item.name;\n                }\n                return Task;\n            }\n        );\n        this.setState({ Tasks: newTasks });\n    }\n\n    //get the name of the selected task\n    getName = (e) => {\n       var id = e.target.id;\n       var Tasks = this.state.Tasks;\n       var id_array = Tasks.map(\n           function (Task){\n               return Task.id\n           }\n       )\n\n       var order = id_array.indexOf(id);\n\n       var clickedTask = this.state.Tasks[order];\n       console.log(this.state.clickedTask.name); \n       this.setState({clickedTask: clickedTask});\n    }\n\n\n    //get the description of the selected Task\n    getDescription = (e) => {\n        var id = e.target.id;\n        var newTask = this.state.clickedTask;\n        \n        newTask.description = e.target.value;\n        \n        this.setState({ clickedTask: newTask });   \n    }\n    \n    //function of toggling the selected Task to completed or incomplete\n    toggleComplete = (e) => {\n        var Class = e.target.className;\n        var newTask = this.state.clickedTask;\n        \n        if (newTask.complete == true){\n            newTask.complete = false;\n            this.setState({ clickedTask: newTask });\n        } else if (newTask.complete == false){\n            newTask.complete = true;\n            this.setState({ clickedTask: newTask });\n        }\n    }\n\n    //function of filtering tasks by input keyword\n    filterText = (e) => {\n        var filterInput = e.target.value;\n        this.setState({ filterText: filterInput })\n    }\n\n\n\n    render(){\n        return (\n            <div>\n                <div className='Task-Panel'>\n                    <div className='SignOut'>\n                        <SignOut onRouteChange={this.props.onRouteChange}/>\n                    </div>\n                    <div className='TaskListDiv'>\n                        <header className='Tasks-header-table'>                    \n                            <button className='addBtn' onClick={this.handleAddEvent.bind(this)}>New Task</button>\n                            <button className='sectionBtn' onClick={this.handleAddSection.bind(this)}>New Section</button>\n                            <FilterBox filterText={this.filterText}/>\n                        </header>\n                        <div className='Tasks'>\n                            <Tasks\n                                Tasks={this.state.Tasks} \n                                onTaskUpdate={this.handleTask.bind(this)} \n                                onTaskInfo={this.getName.bind(this)}\n                                filterText={this.state.filterText}\n                            />\n                        </div>\n                    </div>  \n                    <div className='TaskInfo'>\n                        <header className='TaskInfo-header-table'>\n                            <MarkBtn clickedTask={this.state.clickedTask} toggleComplete={this.toggleComplete.bind(this)} />\n                        </header>\n                        <TaskInfo \n                            clickedTask={this.state.clickedTask} \n                            onTaskUpdate={this.handleTask.bind(this)} \n                            getDescription={this.getDescription.bind(this)}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}