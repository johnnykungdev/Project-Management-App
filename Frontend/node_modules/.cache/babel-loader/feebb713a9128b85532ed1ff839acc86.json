{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/Project-todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/Project-todolist/src/components/TaskList/TaskList.js\";\nimport React, { Component } from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport './TaskList.css';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.handleAddEvent = function (e) {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n      var Task = {\n        id: id,\n        name: '',\n        description: '',\n        complete: ''\n      };\n\n      _this.state.Tasks.push(Task);\n\n      _this.setState(_this.state.Tasks);\n    };\n\n    _this.handleTask = function (e) {\n      var item = {\n        id: e.target.id,\n        name: e.target.value\n      };\n\n      var currentTasks = _this.state.Tasks.slice();\n\n      var newTasks = currentTasks.map(function (Task) {\n        if (String(item.id) === String(Task.id)) {\n          Task.name = item.name;\n        }\n\n        return Task;\n      });\n\n      _this.setState({\n        Tasks: newTasks\n      });\n    };\n\n    _this.getName = function (e) {\n      var id = e.target.id;\n      var Tasks = _this.state.Tasks;\n      var id_array = Tasks.map(function (Task) {\n        return Task.id;\n      });\n      var order = id_array.indexOf(id);\n      var clickedTask = _this.state.Tasks[order];\n      console.log(_this.state.clickedTask.name);\n\n      _this.setState({\n        clickedTask: clickedTask\n      });\n    };\n\n    _this.getDescription = function (e) {\n      var id = e.target.id;\n      var newTask = _this.state.clickedTask;\n      newTask.description = e.target.value;\n\n      _this.setState({\n        clickedTask: newTask\n      });\n    };\n\n    _this.toggleComplete = function (e) {\n      var Class = e.target.className;\n      var newTask = _this.state.clickedTask;\n\n      if (newTask.complete == true) {\n        newTask.complete = false;\n\n        _this.setState({\n          clickedTask: newTask\n        });\n      } else if (newTask.complete == false) {\n        newTask.complete = true;\n\n        _this.setState({\n          clickedTask: newTask\n        });\n      }\n    };\n\n    _this.filterText = function (e) {\n      var keyword = e.target.value.toLowerCase();\n      var Tasks = _this.state.Tasks;\n      console.log(keyword);\n      var newTasks = Tasks.map(function (Task) {\n        if (Task.name.includes(keyword) == true) {\n          return Task;\n        }\n      });\n      console.log(newTasks);\n    };\n\n    _this.state = {\n      Tasks: [{\n        id: 'qweqrasr',\n        name: 'clean the refrig',\n        description: 'Mom wants you to clean the refrig before she comes back tonight.',\n        complete: true\n      }, {\n        id: 'qwrqrwr',\n        name: 'cook the dinner',\n        description: 'prepare the dinner before 6pm.',\n        complete: true\n      }],\n      clickedTask: {\n        id: '',\n        name: '',\n        description: '',\n        complete: ''\n      }\n    };\n    return _this;\n  } //Event of adding new Task in the TaskTable\n\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Task-Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SignOut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(SignOut, {\n        onRouteChange: this.props.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"TaskListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"Tasks-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addBtn\",\n        onClick: this.handleAddEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"New Task\"), React.createElement(FilterBox, {\n        filterText: this.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Tasks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        Tasks: this.state.Tasks,\n        onTaskUpdate: this.handleTask.bind(this),\n        onTaskInfo: this.getName.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"TaskInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"TaskInfo-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(MarkBtn, {\n        clickedTask: this.state.clickedTask,\n        toggleComplete: this.toggleComplete.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(TaskInfo, {\n        clickedTask: this.state.clickedTask,\n        onTaskUpdate: this.handleTask.bind(this),\n        getDescription: this.getDescription.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/Project-todolist/src/components/TaskList/TaskList.js"],"names":["React","Component","Tasks","TaskInfo","SignOut","MarkBtn","FilterBox","TaskList","props","handleAddEvent","e","id","Date","Math","floor","random","toString","Task","name","description","complete","state","push","setState","handleTask","item","target","value","currentTasks","slice","newTasks","map","String","getName","id_array","order","indexOf","clickedTask","console","log","getDescription","newTask","toggleComplete","Class","className","filterText","keyword","toLowerCase","includes","onRouteChange","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport './TaskList.css';\n\nclass TaskList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Tasks: [\n                {\n                    id: 'qweqrasr',\n                    name: 'clean the refrig',\n                    description: 'Mom wants you to clean the refrig before she comes back tonight.',\n                    complete: true,\n                },\n                {\n                    id: 'qwrqrwr',\n                    name: 'cook the dinner',\n                    description: 'prepare the dinner before 6pm.',\n                    complete: true,\n                }\n            ],\n\n            clickedTask: {\n                id: '',\n                name: '',\n                description: '',\n                complete: '',\n            },\n        }\n    }\n\n    //Event of adding new Task in the TaskTable\n    handleAddEvent = (e) => {\n    var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n    var Task = {\n        id: id,\n        name: '',\n        description: '',\n        complete: '',\n        }\n    \n        this.state.Tasks.push(Task);\n        this.setState(this.state.Tasks);\n    }\n\n    //Event of editing the selected task\n    handleTask = (e) => {\n        var item = {\n            id: e.target.id,\n            name: e.target.value,\n        }\n        \n        var currentTasks = this.state.Tasks.slice();\n        var newTasks = currentTasks.map(\n            function (Task){\n                if (String(item.id) === String(Task.id)){\n                    Task.name = item.name;\n                }\n                return Task;\n            }\n        );\n        this.setState({ Tasks: newTasks });\n    }\n\n    getName = (e) => {\n       var id = e.target.id;\n       var Tasks = this.state.Tasks;\n       var id_array = Tasks.map(\n           function (Task){\n               return Task.id\n           }\n       )\n\n       var order = id_array.indexOf(id);\n\n       var clickedTask = this.state.Tasks[order];\n       console.log(this.state.clickedTask.name); \n       this.setState({clickedTask: clickedTask});\n    }\n\n    getDescription = (e) => {\n        var id = e.target.id;\n        var newTask = this.state.clickedTask;\n        \n        newTask.description = e.target.value;\n        \n        this.setState({ clickedTask: newTask });   \n    }\n    \n    //function of toggling the selected Task to completed or incomplete\n    toggleComplete = (e) => {\n        var Class = e.target.className;\n        var newTask = this.state.clickedTask;\n        \n        if (newTask.complete == true){\n            newTask.complete = false;\n            this.setState({ clickedTask: newTask });\n        } else if (newTask.complete == false){\n            newTask.complete = true;\n            this.setState({ clickedTask: newTask });\n        }\n    }\n\n    //function of filtering tasks by input keyword\n    filterText = (e) => {\n        var keyword = e.target.value.toLowerCase();\n        var Tasks = this.state.Tasks;\n        console.log(keyword)\n        \n        var newTasks = Tasks.map(\n            function (Task){\n                if (Task.name.includes(keyword) == true){\n                    return Task;\n                }\n            }\n        )\n\n        console.log(newTasks)\n    }\n\n    render(){\n        return (\n            <div className='Task-Panel'>\n                <div className='SignOut'>\n                    <SignOut onRouteChange={this.props.onRouteChange}/>\n                </div>\n                <div className='TaskListDiv'>\n                    <header className='Tasks-header-table'>                    \n                        <button className='addBtn' onClick={this.handleAddEvent.bind(this)}>New Task</button>\n                        <FilterBox filterText={this.filterText}/>\n                    </header>\n                    <div className='Tasks'>\n                        <Tasks\n                            Tasks={this.state.Tasks} \n                            onTaskUpdate={this.handleTask.bind(this)} \n                            onTaskInfo={this.getName.bind(this)}\n                        />\n                    </div>\n                </div>  \n                <div className='TaskInfo'>\n                    <header className='TaskInfo-header-table'>\n                        <MarkBtn clickedTask={this.state.clickedTask} toggleComplete={this.toggleComplete.bind(this)} />\n                    </header>\n                    <TaskInfo \n                        clickedTask={this.state.clickedTask} \n                        onTaskUpdate={this.handleTask.bind(this)} \n                        getDescription={this.getDescription.bind(this)}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}