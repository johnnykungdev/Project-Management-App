{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/Tasks/Tasks.js\";\nimport React, { Component } from 'react';\nimport './List.css';\n\nvar TasksList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TasksList, _Component);\n\n  function TasksList(props) {\n    var _this;\n\n    _classCallCheck(this, TasksList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TasksList).call(this, props));\n\n    _this.handleAddEvent = function (e) {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n      var Task = {\n        id: id,\n        name: '',\n        description: ''\n      };\n\n      _this.state.Tasks.push(Task);\n\n      _this.setState(_this.state.Tasks);\n    };\n\n    _this.handleTask = function (e) {\n      var item = {\n        id: e.target.id,\n        name: e.target.value\n      };\n\n      var currentTasks = _this.state.Tasks.slice();\n\n      var newTasks = currentTasks.map(function (Task) {\n        if (item.id == Task.id) {\n          Task.name = item.name;\n        }\n\n        return Task;\n      });\n\n      _this.setState({\n        Tasks: newTasks\n      });\n    };\n\n    _this.getInfo = function (e) {\n      var id = e.target.id;\n      var Tasks = _this.state.Tasks;\n      var id_array = Tasks.map(function (Task) {\n        return Task.id;\n      });\n      var order = id_array.indexOf(id);\n      var clickedTask = _this.state.Tasks[order];\n      console.log(_this.state.clickedTask.name);\n\n      _this.setState({\n        clickedTask: clickedTask\n      });\n    };\n\n    _this.state = {\n      Tasks: [{\n        id: 'qweqrasr',\n        name: 'clean the refrig',\n        description: 'Mom wants you to clean the refrig before she comes back tonight.'\n      }, {\n        id: 'qwrqrwr',\n        name: 'cook the dinner',\n        description: 'prepare the dinner before 6pm.'\n      }],\n      clickedTask: {}\n    };\n    return _this;\n  } //Event of adding new Task in the TaskTable\n\n\n  _createClass(TasksList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"TaskListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addBtn\",\n        onClick: this.handleAddEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"New Task\"), React.createElement(Tasks, {\n        Tasks: this.state.Tasks,\n        onTaskUpdate: this.handleTask.bind(this),\n        onTaskInfo: this.getInfo.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"TaskInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(TaskInfo, {\n        clickedTask: this.state.clickedTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TasksList;\n}(Component);\n\nvar Tasks =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Tasks, _Component2);\n\n  function Tasks() {\n    _classCallCheck(this, Tasks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tasks).apply(this, arguments));\n  }\n\n  _createClass(Tasks, [{\n    key: \"render\",\n    value: function render() {\n      var onTaskUpdate = this.props.onTaskUpdate;\n      var onTaskInfo = this.props.onTaskInfo;\n      var generateTasks = this.props.Tasks.map(function (Task) {\n        return React.createElement(TaskRow, {\n          Task: Task,\n          onTaskUpdate: onTaskUpdate,\n          onTaskInfo: onTaskInfo,\n          key: Task.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, generateTasks);\n    }\n  }]);\n\n  return Tasks;\n}(Component);\n\nvar TaskRow =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TaskRow, _Component3);\n\n  function TaskRow() {\n    _classCallCheck(this, TaskRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskRow).apply(this, arguments));\n  }\n\n  _createClass(TaskRow, [{\n    key: \"render\",\n    value: function render() {\n      var onTaskUpdate = this.props.onTaskUpdate;\n      var onTaskInfo = this.props.onTaskInfo;\n      return React.createElement(EditableCell, {\n        onTaskUpdate: onTaskUpdate,\n        onTaskInfo: onTaskInfo,\n        CellData: {\n          id: this.props.Task.id,\n          name: this.props.Task.name\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TaskRow;\n}(Component);\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(EditableCell, _Component4);\n\n  function EditableCell() {\n    _classCallCheck(this, EditableCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditableCell).apply(this, arguments));\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      var onTaskUpdate = this.props.onTaskUpdate;\n      var onTaskInfo = this.props.onTaskInfo;\n      return React.createElement(\"input\", {\n        type: \"text\",\n        className: \"Task\",\n        id: this.props.CellData.id,\n        value: this.props.CellData.name,\n        onChange: onTaskUpdate,\n        onClick: onTaskInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EditableCell;\n}(Component);\n\nvar TaskInfo =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(TaskInfo, _Component5);\n\n  function TaskInfo() {\n    _classCallCheck(this, TaskInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskInfo).apply(this, arguments));\n  }\n\n  _createClass(TaskInfo, [{\n    key: \"render\",\n    value: function render() {\n      var clickedTask = this.props.clickedTask;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Name\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Detail\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Details, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TaskInfo;\n}(Component);\n\nexport default TasksList;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/Tasks/Tasks.js"],"names":["React","Component","TasksList","props","handleAddEvent","e","id","Date","Math","floor","random","toString","Task","name","description","state","Tasks","push","setState","handleTask","item","target","value","currentTasks","slice","newTasks","map","getInfo","id_array","order","indexOf","clickedTask","console","log","bind","onTaskUpdate","onTaskInfo","generateTasks","TaskRow","EditableCell","CellData","TaskInfo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './List.css';\n\nclass TasksList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Tasks: [\n                {\n                    id: 'qweqrasr',\n                    name: 'clean the refrig',\n                    description: 'Mom wants you to clean the refrig before she comes back tonight.'\n                },\n                {\n                    id: 'qwrqrwr',\n                    name: 'cook the dinner',\n                    description: 'prepare the dinner before 6pm.'\n                }\n            ],\n\n            clickedTask: {},\n        }\n    }\n\n    //Event of adding new Task in the TaskTable\n    handleAddEvent = (e) => {\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n        var Task = {\n            id: id,\n            name: '',\n            description: '',\n        }\n    \n        this.state.Tasks.push(Task);\n        this.setState(this.state.Tasks);\n    }\n\n    handleTask = (e) => {\n        var item = {\n            id: e.target.id,\n            name: e.target.value,\n        }\n        \n        var currentTasks = this.state.Tasks.slice();\n        var newTasks = currentTasks.map(\n            function (Task){\n                if (item.id == Task.id){\n                    Task.name = item.name;\n                }\n                return Task;\n            }\n        );\n        this.setState({ Tasks: newTasks });\n    }\n\n    getInfo = (e) => {\n       var id = e.target.id;\n       var Tasks = this.state.Tasks;\n       var id_array = Tasks.map(\n           function (Task){\n               return Task.id\n           }\n       )\n\n       var order = id_array.indexOf(id);\n\n       var clickedTask = this.state.Tasks[order];\n       console.log(this.state.clickedTask.name); \n       this.setState({clickedTask: clickedTask});\n    }\n    \n    render(){\n        return (\n            <div>\n                <div className='TaskListDiv'>\n                    <button className='addBtn' onClick={this.handleAddEvent.bind(this)}>New Task</button>\n                    <Tasks \n                        Tasks={this.state.Tasks} \n                        onTaskUpdate={this.handleTask.bind(this)} \n                        onTaskInfo={this.getInfo.bind(this)}/>\n                </div>  \n                <div className='TaskInfo'>\n                    <TaskInfo clickedTask={this.state.clickedTask} />\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Tasks extends Component {\n    \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n        var onTaskInfo = this.props.onTaskInfo;\n\n        var generateTasks = this.props.Tasks.map(\n            function (Task){\n                return (\n                    <TaskRow\n                        Task={Task}\n                        onTaskUpdate={onTaskUpdate}\n                        onTaskInfo={onTaskInfo}\n                        key={Task.id}\n                    />\n                )\n            }\n        )\n\n        return (\n            <div>\n                {generateTasks}\n            </div>\n        )\n    }\n}\n\nclass TaskRow extends Component {\n    \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n        var onTaskInfo = this.props.onTaskInfo;\n\n        return (\n            <EditableCell\n            onTaskUpdate={onTaskUpdate}\n            onTaskInfo={onTaskInfo}\n            CellData={{\n                id: this.props.Task.id,\n                name: this.props.Task.name,\n            }}\n            />\n        )\n    }\n}\n\nclass EditableCell extends Component {\n    \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n        var onTaskInfo = this.props.onTaskInfo;\n\n        return (\n            <input \n                type='text'\n                className='Task'\n                id={this.props.CellData.id}\n                value={this.props.CellData.name}\n                onChange={onTaskUpdate}\n                onClick={onTaskInfo}\n            />\n        )\n    }\n}\n\nclass TaskInfo extends Component {\n    \n    render(){\n        var clickedTask = this.props.clickedTask;\n\n        return (\n            <div>\n                <div>\n                    <label>Name</label>\n                </div>\n                <div>\n                    <Name />\n                </div>\n                <div>\n                    <label>Detail</label>\n                </div>\n                <div>\n                    <Details />\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default TasksList;"]},"metadata":{},"sourceType":"module"}