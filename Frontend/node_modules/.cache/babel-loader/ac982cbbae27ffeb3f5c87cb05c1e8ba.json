{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/src/components/TaskList/Tasks/TaskRow/EditableCell/EditableCell.js\";\nimport React, { Component } from 'react';\nimport './Task.css';\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditableCell, _Component);\n\n  function EditableCell() {\n    _classCallCheck(this, EditableCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditableCell).apply(this, arguments));\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      var onTaskUpdate = this.props.onTaskUpdate;\n      var onTaskInfo = this.props.onTaskInfo;\n      var Task = this.props.Task;\n      var complete = this.props.Task.complete;\n\n      var generateCheckbox = function generateCheckbox(complete) {\n        if (complete == 1) {\n          return React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }));\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, generateCheckbox, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"Task\",\n        id: this.props.id,\n        value: this.props.name,\n        onChange: onTaskUpdate,\n        onClick: onTaskInfo,\n        placeholder: \"Enter the Task Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditableCell;\n}(Component);\n/*\nclass EditableCell extends Component {\n        \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n        var onTaskInfo = this.props.onTaskInfo;\n\n        return (\n            <div>\n                <input \n                    type='text'\n                    className='Task'\n                    id={this.props.id}\n                    value={this.props.name}\n                    onChange={onTaskUpdate}\n                    onClick={onTaskInfo}\n                    placeholder='Enter the Task Name'\n                />\n            </div>\n        )\n    }\n} \n*/\n\n\nexport default EditableCell;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/Project-todolist/Frontend/src/components/TaskList/Tasks/TaskRow/EditableCell/EditableCell.js"],"names":["React","Component","EditableCell","onTaskUpdate","props","onTaskInfo","Task","complete","generateCheckbox","id","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;;IAEMC,Y;;;;;;;;;;;;;6BAEM;AACJ,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWD,YAA9B;AACA,UAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,UAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AACA,UAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWE,IAAX,CAAgBC,QAA/B;;AAEA,UAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUD,QAAV,EAAmB;AACtC,YAAGA,QAAQ,IAAI,CAAf,EAAiB;AACb,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,SAND,MAMO;AACH,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH;AACJ,OAdD;;AAgBA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,gBADL,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWK,EAHnB;AAII,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,IAJtB;AAKI,QAAA,QAAQ,EAAEP,YALd;AAMI,QAAA,OAAO,EAAEE,UANb;AAOI,QAAA,WAAW,EAAC,qBAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAcH;;;;EAtCsBJ,S;AAyC3B;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,eAAeC,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport './Task.css';\n\nclass EditableCell extends Component {\n        \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n        var onTaskInfo = this.props.onTaskInfo;\n        var Task = this.props.Task;\n        var complete = this.props.Task.complete;\n\n        var generateCheckbox = function (complete){\n            if(complete == 1){\n                return (\n                    <label>\n                        <input type=\"checkbox\" checked />\n                    </label>\n                )\n            } else {\n                return (\n                    <label>\n                        <input type=\"checkbox\" />\n                    </label>\n                )\n            }\n        }\n\n        return (\n            <div>\n                {generateCheckbox}\n                <input \n                    type='text'\n                    className='Task'\n                    id={this.props.id}\n                    value={this.props.name}\n                    onChange={onTaskUpdate}\n                    onClick={onTaskInfo}\n                    placeholder='Enter the Task Name'\n                />\n            </div>\n        )\n    }\n}\n\n/*\nclass EditableCell extends Component {\n        \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n        var onTaskInfo = this.props.onTaskInfo;\n\n        return (\n            <div>\n                <input \n                    type='text'\n                    className='Task'\n                    id={this.props.id}\n                    value={this.props.name}\n                    onChange={onTaskUpdate}\n                    onClick={onTaskInfo}\n                    placeholder='Enter the Task Name'\n                />\n            </div>\n        )\n    }\n} \n*/\n\nexport default EditableCell;"]},"metadata":{},"sourceType":"module"}