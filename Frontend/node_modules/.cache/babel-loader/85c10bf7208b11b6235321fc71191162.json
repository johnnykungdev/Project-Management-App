{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/Tasks/Tasks.js\";\nimport React, { Component } from 'react';\nimport './List.css';\n\nvar Tasks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tasks, _Component);\n\n  function Tasks(props) {\n    var _this;\n\n    _classCallCheck(this, Tasks);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tasks).call(this, props));\n    _this.state = {\n      Tasks: [{\n        id: 1,\n        name: 'clean the refrig',\n        description: 'Mom wants you to clean the refrig before she comes back tonight.'\n      }]\n    };\n    return _this;\n  } //Event of adding new Task in the TaskTable\n\n\n  _createClass(Tasks, [{\n    key: \"handleAddEvent\",\n    value: function handleAddEvent(e) {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n      var Task = {\n        id: id,\n        name: '',\n        description: ''\n      };\n      this.state.Tasks.push(Task);\n      this.setState(this.state.Tasks);\n    } //event of editing the selected task\n\n  }, {\n    key: \"handleTaskTable\",\n    value: function handleTaskTable(e) {\n      var item = {\n        id: e.target.id,\n        name: e.target.name,\n        value: e.target.value\n      };\n      var Tasks = this.state.Tasks;\n      var newTasks = Tasks.map(function (Task) {\n        for (var key in Task) {\n          if (key === item.name && Task.id === item.id) {\n            Task[key] = item.value;\n          }\n        }\n\n        return Task;\n      });\n      this.setState({\n        Tasks: newTasks\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onEditUpdate: this.handleTaskTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Tasks;\n}(Component);\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/Tasks/Tasks.js"],"names":["React","Component","Tasks","props","state","id","name","description","e","Date","Math","floor","random","toString","Task","push","setState","item","target","value","newTasks","map","key","handleTaskTable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,CACH;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE,kBAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OADG;AADE,KAAb;AAHc;AAYjB,G,CAED;;;;;mCACgBC,C,EAAE;AACd,UAAIH,EAAE,GAAG,CAAC,CAAE,IAAII,IAAJ,EAAF,GAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAhB,EAAoDC,QAApD,CAA6D,EAA7D,CAAT;AACA,UAAIC,IAAI,GAAG;AACPT,QAAAA,EAAE,EAAEA,EADG;AAEPC,QAAAA,IAAI,EAAE,EAFC;AAGPC,QAAAA,WAAW,EAAE;AAHN,OAAX;AAMA,WAAKH,KAAL,CAAWF,KAAX,CAAiBa,IAAjB,CAAsBD,IAAtB;AACA,WAAKE,QAAL,CAAc,KAAKZ,KAAL,CAAWF,KAAzB;AACH,K,CAED;;;;oCACiBM,C,EAAE;AACf,UAAIS,IAAI,GAAG;AACPZ,QAAAA,EAAE,EAAEG,CAAC,CAACU,MAAF,CAASb,EADN;AAEPC,QAAAA,IAAI,EAAEE,CAAC,CAACU,MAAF,CAASZ,IAFR;AAGPa,QAAAA,KAAK,EAAEX,CAAC,CAACU,MAAF,CAASC;AAHT,OAAX;AAMA,UAAIjB,KAAK,GAAG,KAAKE,KAAL,CAAWF,KAAvB;AACA,UAAIkB,QAAQ,GAAGlB,KAAK,CAACmB,GAAN,CACX,UAASP,IAAT,EAAc;AACV,aAAK,IAAIQ,GAAT,IAAgBR,IAAhB,EAAqB;AACjB,cAAIQ,GAAG,KAAKL,IAAI,CAACX,IAAb,IAAqBQ,IAAI,CAACT,EAAL,KAAYY,IAAI,CAACZ,EAA1C,EAA6C;AACzCS,YAAAA,IAAI,CAACQ,GAAD,CAAJ,GAAYL,IAAI,CAACE,KAAjB;AACH;AACJ;;AAED,eAAOL,IAAP;AACH,OATU,CAAf;AAYA,WAAKE,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAEkB;AAAT,OAAd;AACH;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,YAAY,EAAE,KAAKG,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EA1DetB,S;;AA8DpB,eAAeC,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport './List.css';\n\nclass Tasks extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Tasks: [\n                {\n                    id: 1,\n                    name: 'clean the refrig',\n                    description: 'Mom wants you to clean the refrig before she comes back tonight.'\n                }\n            ],\n        }\n    }\n\n    //Event of adding new Task in the TaskTable\n    handleAddEvent (e){\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n        var Task = {\n            id: id,\n            name: '',\n            description: '',\n        }\n\n        this.state.Tasks.push(Task);\n        this.setState(this.state.Tasks);\n    }\n\n    //event of editing the selected task\n    handleTaskTable (e){\n        var item = {\n            id: e.target.id,\n            name: e.target.name,\n            value: e.target.value,\n        }\n\n        var Tasks = this.state.Tasks;\n        var newTasks = Tasks.map ( \n            function(Task){\n                for (var key in Task){\n                    if (key === item.name && Task.id === item.id){\n                        Task[key] = item.value;\n                    }\n                }\n                \n                return Task;\n            }\n        );\n\n        this.setState({ Tasks: newTasks })\n    }\n\n    render(){\n        return (\n            <div>\n                <input onEditUpdate={this.handleTaskTable} />\n            </div>\n        )\n    }\n}\n\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}