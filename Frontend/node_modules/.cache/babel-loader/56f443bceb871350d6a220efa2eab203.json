{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/Project-todolist/Frontend/src/components/TaskList/TaskList.js\";\nimport React, { Component } from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport './TaskList.css';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.handleAddEvent = function () {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString();\n      fetch('http://localhost:3000/Tasks', {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id,\n          name: '',\n          description: '',\n          complete: ''\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        data.sort(function (a, b) {\n          return a.index - b.index;\n        });\n\n        _this.setState({\n          Tasks: data\n        });\n      });\n    };\n\n    _this.handleAddSection = function () {\n      var id = 'section' + Math.floor(Math.random() * 1000);\n      fetch('http://localhost:3000/Tasks', {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id,\n          name: '---Section---',\n          description: '',\n          complete: ''\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        data.sort(function (a, b) {\n          return a.index - b.index;\n        });\n\n        _this.setState({\n          Tasks: data\n        });\n      });\n    };\n\n    _this.handleTask = function (e) {\n      var id = e.target.id;\n      var name = e.target.value;\n      fetch('http://localhost:3000/TasksName', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          name: name\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        data.sort(function (a, b) {\n          return a.index - b.index;\n        });\n\n        _this.setState(function (state) {\n          return {\n            Tasks: data\n          };\n        });\n\n        _this.setState(function (state) {\n          return {\n            clickedTaskName: name\n          };\n        });\n\n        _this.setState(function (state) {\n          return {\n            clickedTaskId: id\n          };\n        });\n      });\n    };\n\n    _this.getInfo = function (e) {\n      var id = e.target.id;\n      var Tasks = _this.state.Tasks;\n      var clickedTask = Tasks.find(function (Task) {\n        if (Task.id === id) {\n          return Task;\n        }\n\n        return false;\n      });\n\n      _this.setState({\n        clickedTask: clickedTask\n      });\n\n      _this.setState({\n        clickedTaskId: id\n      });\n\n      fetch('http://localhost:3000/Tasks', {\n        method: 'get'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var clickedTask = data.find(function (Task) {\n          if (Task.id == id) {\n            return Task;\n          }\n\n          return false;\n        });\n\n        _this.setState(function (state) {\n          return {\n            clickedTaskName: clickedTask.name\n          };\n        });\n      });\n    };\n\n    _this.getDescription = function (e) {\n      var id = e.target.id;\n      var newTask = _this.state.clickedTask;\n      newTask.description = e.target.value;\n\n      _this.setState({\n        clickedTask: newTask\n      });\n\n      fetch('http://localhost:3000/TasksDescription', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: _this.state.clickedTask.id,\n          description: _this.state.clickedTask.description\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data);\n\n        _this.setState(_this.state.Tasks);\n\n        console.log(_this.state);\n      });\n    };\n\n    _this.toggleComplete = function (e) {\n      var newTask = _this.state.clickedTask;\n\n      if (newTask.complete == true) {\n        newTask.complete = false;\n\n        _this.setState({\n          clickedTask: newTask\n        });\n      } else if (newTask.complete == false) {\n        newTask.complete = true;\n\n        _this.setState({\n          clickedTask: newTask\n        });\n      }\n\n      fetch('http://localhost:3000/TasksComplete', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: _this.state.clickedTask.id,\n          complete: _this.state.clickedTask.complete\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data);\n\n        _this.setState(_this.state.Tasks);\n\n        console.log(_this.state);\n      });\n    };\n\n    _this.filterText = function (e) {\n      var filterInput = e.target.value;\n\n      _this.setState({\n        filterText: filterInput\n      });\n    };\n\n    _this.state = {\n      Tasks: [],\n      clickedTask: {\n        id: '',\n        name: '',\n        description: '',\n        complete: ''\n      },\n      filterText: '',\n      clickedTaskId: '',\n      clickedTaskName: '',\n      clickedTaskComplete: false\n    };\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/Tasks').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        data.sort(function (a, b) {\n          return a.index - b.index;\n        });\n\n        _this2.setState({\n          Tasks: data\n        });\n      });\n    } //Event of adding new Task in the Tasktable\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Project-Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"User\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"New-Project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"New project\"), React.createElement(\"div\", {\n        className: \"Project-List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"SignOut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(SignOut, {\n        onRouteChange: this.props.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"TaskListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"Tasks-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addBtn\",\n        onClick: this.handleAddEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"New Task\"), React.createElement(\"button\", {\n        className: \"sectionBtn\",\n        onClick: this.handleAddSection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"New Section\"), React.createElement(FilterBox, {\n        filterText: this.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Tasks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        Tasks: this.state.Tasks,\n        onTaskUpdate: this.handleTask.bind(this),\n        onTaskInfo: this.getInfo.bind(this),\n        filterText: this.state.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"TaskInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"TaskInfo-header-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(MarkBtn, {\n        clickedTask: this.state.clickedTask,\n        toggleComplete: this.toggleComplete.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })), React.createElement(TaskInfo, {\n        clickedTaskName: this.state.clickedTaskName,\n        clickedTaskId: this.state.clickedTaskId,\n        onTaskUpdate: this.handleTask.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/Project-todolist/Frontend/src/components/TaskList/TaskList.js"],"names":["React","Component","Tasks","TaskInfo","SignOut","MarkBtn","FilterBox","TaskList","props","handleAddEvent","id","Date","Math","floor","random","toString","fetch","method","headers","body","JSON","stringify","name","description","complete","then","response","json","data","sort","a","b","index","setState","handleAddSection","handleTask","e","target","value","state","clickedTaskName","clickedTaskId","getInfo","clickedTask","find","Task","getDescription","newTask","res","console","log","toggleComplete","filterText","filterInput","clickedTaskComplete","onRouteChange","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport SignOut from '../SignOut/SignOut.js';\nimport MarkBtn from './MarkBtn/MarkBtn.js';\nimport FilterBox from './FilterBox/FilterBox.js';\nimport './TaskList.css';\n\nclass TaskList extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Tasks: [],\n\n            clickedTask: {\n                id: '',\n                name: '',\n                description: '',\n                complete: '',\n            },\n\n            filterText: '',\n\n            clickedTaskId: '',\n            clickedTaskName: '',\n            clickedTaskComplete: false,\n        }\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:3000/Tasks')\n            .then(res => res.json())\n            .then(data => {\n                data.sort(function(a, b){\n                    return a.index - b.index;\n                })\n                this.setState({ Tasks: data })})\n    }\n\n\n    //Event of adding new Task in the Tasktable\n    handleAddEvent = () => {\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString();\n        \n        fetch('http://localhost:3000/Tasks', {\n            method: 'post',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                id: id,\n                name: '',\n                description: '',\n                complete: '',\n            }) \n        })\n            .then(response => response.json())\n            .then(data => {\n                data.sort(function(a, b){\n                    return a.index - b.index;\n                })\n\n                this.setState({ Tasks: data})\n            })\n    }\n\n    //Event of adding new section in the Tasktable\n    handleAddSection = () => {\n        var id = ('section'+ Math.floor(Math.random() * 1000));\n        \n        fetch('http://localhost:3000/Tasks', {\n            method: 'post',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                id: id,\n                name: '---Section---',\n                description: '',\n                complete: '',\n            }) \n        })\n            .then(response => response.json())\n            .then(data => {\n                data.sort(function(a, b){\n                    return a.index - b.index;\n                })\n                this.setState({ Tasks: data})\n            })\n    }\n\n    //Event of editing the selected task\n    handleTask = (e) => {\n        var id = e.target.id;\n        var name = e.target.value;\n\n        fetch('http://localhost:3000/TasksName', {\n           method: 'put',\n           headers: { 'Content-Type': 'application/json' },\n           body: JSON.stringify({\n               id: id,\n               name: name,\n           })\n        })\n            .then(response => response.json())\n            .then(data => {\n                data.sort(function(a, b){\n                    return a.index - b.index;\n                })\n\n                this.setState((state) => { return {Tasks: data }})\n                this.setState((state) => { return {clickedTaskName: name }})\n                this.setState((state) => { return {clickedTaskId: id }})\n            })\n        }\n    \n\n\n    //get the name of the selected task and show on the title bar in the task info\n    getInfo = (e) => {\n        var id = e.target.id;\n\n        var Tasks = this.state.Tasks;\n        var clickedTask = Tasks.find(\n            (Task) => {\n                if(Task.id === id){\n                    return Task;\n                }\n                return false;\n            }\n        )\n\n        this.setState({ clickedTask })\n        this.setState({ clickedTaskId: id })\n\n        fetch('http://localhost:3000/Tasks',{\n            method: 'get',\n        })\n            .then(response => response.json())\n            .then(data => {\n                var clickedTask = data.find(\n                    function(Task){\n                        if (Task.id == id ){\n                            return Task;\n                        }\n                        return false;\n                    }\n                )\n\n                this.setState((state) => { return {clickedTaskName: clickedTask.name}})\n            })\n    }\n\n    //get the description of the selected Task\n    getDescription = (e) => {\n        var id = e.target.id;\n        var newTask = this.state.clickedTask;\n        \n        newTask.description = e.target.value;\n        \n        this.setState({ clickedTask: newTask });   \n\n        fetch('http://localhost:3000/TasksDescription', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: this.state.clickedTask.id,\n                description: this.state.clickedTask.description,\n            })\n         })\n             .then(res => res.json())\n             .then(data => {\n                 console.log(data);\n                 this.setState(this.state.Tasks);\n                 console.log(this.state);\n             })\n    }\n\n    \n    //function of toggling the selected Task to completed or incomplete\n    toggleComplete = (e) => {\n        \n        var newTask = this.state.clickedTask;\n        \n        if (newTask.complete == true){\n            newTask.complete = false;\n            this.setState({ clickedTask: newTask });\n        } else if (newTask.complete == false){\n            newTask.complete = true;\n            this.setState({ clickedTask: newTask });\n        }\n\n        fetch('http://localhost:3000/TasksComplete', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: this.state.clickedTask.id,\n                complete: this.state.clickedTask.complete,\n            })\n         })\n             .then(res => res.json())\n             .then(data => {\n                 console.log(data);\n                 this.setState(this.state.Tasks);\n                 console.log(this.state);\n             })\n    }\n\n    //function of filtering tasks by input keyword\n    filterText = (e) => {\n        var filterInput = e.target.value;\n        this.setState({ filterText: filterInput })\n    }\n\n    render(){\n        return (\n            <div className='Window'>\n                <div className='Project-Panel'>\n                    <div className='User'></div>\n                    <div className='New-Project'>New project</div>\n                    <div className='Project-List'></div>\n                </div>\n                <div className='SignOut'>\n                        <SignOut onRouteChange={this.props.onRouteChange}/>\n                </div>\n                    <div className='TaskListDiv'>\n                        <header className='Tasks-header-table'>                    \n                            <button className='addBtn' onClick={this.handleAddEvent.bind(this)}>New Task</button>\n                            <button className='sectionBtn' onClick={this.handleAddSection.bind(this)}>New Section</button>\n                            <FilterBox filterText={this.filterText}/>\n                        </header>\n                        <div className='Tasks'>\n                            <Tasks\n                                Tasks={this.state.Tasks} \n                                onTaskUpdate={this.handleTask.bind(this)} \n                                onTaskInfo={this.getInfo.bind(this)}\n                                filterText={this.state.filterText}\n                            />\n                        </div>\n                    </div>  \n                    <div className='TaskInfo'>\n                        <header className='TaskInfo-header-table'>\n                            <MarkBtn clickedTask={this.state.clickedTask} toggleComplete={this.toggleComplete.bind(this)} />\n                        </header>\n                        <TaskInfo \n                            clickedTaskName={this.state.clickedTaskName} \n                            clickedTaskId={this.state.clickedTaskId}\n                            onTaskUpdate={this.handleTask.bind(this)} \n\n                        />\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}