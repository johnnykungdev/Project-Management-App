{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/TaskList/TaskInfo/TaskDescription/TaskDescription.js\";\nimport React, { Component } from 'react';\n\nvar TaskDescription =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskDescription, _Component);\n\n  function TaskDescription() {\n    _classCallCheck(this, TaskDescription);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskDescription).apply(this, arguments));\n  }\n\n  _createClass(TaskDescription, [{\n    key: \"render\",\n    value: function render() {\n      var clickedTask = this.props.clickedTask;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(EditableCell, {\n        CellData: {\n          id: clickedTask.id,\n          type: 'description'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TaskDescription;\n}(Component);\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(EditableCell, _Component2);\n\n  function EditableCell() {\n    _classCallCheck(this, EditableCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditableCell).apply(this, arguments));\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"textarea\", {\n        className: \"TaskName\",\n        value: clickedTask.name,\n        placeholder: \"Write a task name\",\n        onChange: onTaskUpdate,\n        id: clickedTask.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EditableCell;\n}(Component);\n\nexport default TaskDescription;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/TaskList/TaskInfo/TaskDescription/TaskDescription.js"],"names":["React","Component","TaskDescription","clickedTask","props","id","type","EditableCell","name","onTaskUpdate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;IAEMC,e;;;;;;;;;;;;;6BAEM;AACJ,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AACI,QAAA,QAAQ,EAAE;AACNE,UAAAA,EAAE,EAAEF,WAAW,CAACE,EADV;AAENC,UAAAA,IAAI,EAAE;AAFA,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH;;;;EAfyBL,S;;IAkBxBM,Y;;;;;;;;;;;;;6BAEM;AACJ,aACI;AACA,QAAA,SAAS,EAAC,UADV;AAEA,QAAA,KAAK,EAAEJ,WAAW,CAACK,IAFnB;AAGA,QAAA,WAAW,EAAC,mBAHZ;AAIA,QAAA,QAAQ,EAAEC,YAJV;AAKA,QAAA,EAAE,EAAEN,WAAW,CAACE,EALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AASH;;;;EAZsBJ,S;;AAe3B,eAAeC,eAAf","sourcesContent":["import React , {Component} from 'react';\n\nclass TaskDescription extends Component {\n    \n    render(){\n        var clickedTask = this.props.clickedTask;\n\n        return (\n            <div>\n                <EditableCell \n                    CellData={{\n                        id: clickedTask.id,\n                        type: 'description',\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nclass EditableCell extends Component {\n    \n    render(){\n        return (\n            <textarea\n            className='TaskName'\n            value={clickedTask.name}\n            placeholder='Write a task name'\n            onChange={onTaskUpdate}\n            id={clickedTask.id}\n        ></textarea>\n        )\n    }\n}\n\nexport default TaskDescription;"]},"metadata":{},"sourceType":"module"}