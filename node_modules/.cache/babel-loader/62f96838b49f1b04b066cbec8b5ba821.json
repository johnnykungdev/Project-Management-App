{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/Tasks/Tasks.js\";\nimport React, { Component } from 'react';\nimport './List.css';\n\nvar TasksList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TasksList, _Component);\n\n  function TasksList(props) {\n    var _this;\n\n    _classCallCheck(this, TasksList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TasksList).call(this, props));\n\n    _this.handleAddEvent = function (e) {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n      var Task = {\n        id: id,\n        name: '',\n        description: ''\n      };\n\n      _this.state.Tasks.push(Task);\n\n      _this.setState(_this.state.Tasks);\n    };\n\n    _this.handleTask = function (e) {\n      var item = {\n        id: e.target.id,\n        name: e.target.name,\n        value: e.target.value\n      };\n      var currentTasks = _this.state.Tasks;\n      var newTasks = currentTasks.map(function (Task) {\n        if (item.id === Task.id) {\n          Task = item.value;\n        }\n\n        return Task;\n      });\n\n      _this.setState({\n        Tasks: newTasks\n      });\n    };\n\n    _this.state = {\n      Tasks: [{\n        id: 1,\n        name: 'clean the refrig',\n        description: 'Mom wants you to clean the refrig before she comes back tonight.'\n      }, {\n        id: 2,\n        name: 'cook the dinner',\n        description: 'prepare the dinner before 6pm.'\n      }]\n    };\n    return _this;\n  } //Event of adding new Task in the TaskTable\n\n\n  _createClass(TasksList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"TaskListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addBtn\",\n        onClick: this.handleAddEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"New Task\"), React.createElement(Tasks, {\n        Tasks: this.state.Tasks,\n        onTaskUpdate: this.handleTask.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TasksList;\n}(Component);\n\nvar Tasks =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Tasks, _Component2);\n\n  function Tasks() {\n    _classCallCheck(this, Tasks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tasks).apply(this, arguments));\n  }\n\n  _createClass(Tasks, [{\n    key: \"render\",\n    value: function render() {\n      var onTaskUpdate = this.props.onTaskUpdate;\n      var generateTasks = this.props.Tasks.map(function (Task) {\n        return React.createElement(\"input\", {\n          className: \"Task\",\n          value: Task.name,\n          key: Task.id,\n          onChange: onTaskUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, generateTasks);\n    }\n  }]);\n\n  return Tasks;\n}(Component);\n\nexport default TasksList;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/Tasks/Tasks.js"],"names":["React","Component","TasksList","props","handleAddEvent","e","id","Date","Math","floor","random","toString","Task","name","description","state","Tasks","push","setState","handleTask","item","target","value","currentTasks","newTasks","map","bind","onTaskUpdate","generateTasks"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './List.css';\n\nclass TasksList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Tasks: [\n                {\n                    id: 1,\n                    name: 'clean the refrig',\n                    description: 'Mom wants you to clean the refrig before she comes back tonight.'\n                },\n                {\n                    id: 2,\n                    name: 'cook the dinner',\n                    description: 'prepare the dinner before 6pm.'\n                }\n            ],\n        }\n    }\n\n    //Event of adding new Task in the TaskTable\n    handleAddEvent = (e) => {\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n        var Task = {\n            id: id,\n            name: '',\n            description: '',\n        }\n    \n        this.state.Tasks.push(Task);\n        this.setState(this.state.Tasks);\n    }\n\n    handleTask = (e) => {\n        var item = {\n            id: e.target.id,\n            name: e.target.name,\n            value: e.target.value,\n        }\n\n        var currentTasks = this.state.Tasks;\n        var newTasks = currentTasks.map(\n            function (Task){\n                if (item.id === Task.id){\n                    Task = item.value;\n                }\n                return Task;\n            }\n        );\n\n        this.setState({Tasks: newTasks})\n    }\n    \n    render(){\n        return (\n            <div className='TaskListDiv'>\n                <button className='addBtn' onClick={this.handleAddEvent.bind(this)}>New Task</button>\n                <Tasks Tasks={this.state.Tasks} onTaskUpdate={this.handleTask.bind(this)} />\n            </div>  \n        )\n    }\n}\n\nclass Tasks extends Component {\n    \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n\n        var generateTasks = this.props.Tasks.map(\n            function (Task){\n                return (\n                    <input \n                        className='Task'\n                        value={Task.name}\n                        key={Task.id}\n                        onChange={onTaskUpdate}\n                    />\n                )\n            }\n        )\n\n        return (\n            <div>\n                {generateTasks}\n            </div>\n        )\n    }\n}\n\nexport default TasksList;"]},"metadata":{},"sourceType":"module"}