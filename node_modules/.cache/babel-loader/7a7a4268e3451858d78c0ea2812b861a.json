{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/TaskList/TaskList.js\";\nimport React, { Component } from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport './TaskList.css';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.handleAddEvent = function (e) {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n      var Task = {\n        id: id,\n        name: '',\n        description: ''\n      };\n\n      _this.state.Tasks.push(Task);\n\n      _this.setState(_this.state.Tasks);\n    };\n\n    _this.handleTask = function (e) {\n      var item = {\n        id: e.target.id,\n        name: e.target.value\n      };\n\n      var currentTasks = _this.state.Tasks.slice();\n\n      var newTasks = currentTasks.map(function (Task) {\n        if (item.id == Task.id) {\n          Task.name = item.name;\n        }\n\n        return Task;\n      });\n\n      _this.setState({\n        Tasks: newTasks\n      });\n    };\n\n    _this.getInfo = function (e) {\n      var id = e.target.id;\n      var Tasks = _this.state.Tasks;\n      var id_array = Tasks.map(function (Task) {\n        return Task.id;\n      });\n      var order = id_array.indexOf(id);\n      var clickedTask = _this.state.Tasks[order];\n      console.log(_this.state.clickedTask.name);\n\n      _this.setState({\n        clickedTask: clickedTask\n      });\n    };\n\n    _this.state = {\n      Tasks: [{\n        id: 'qweqrasr',\n        name: 'clean the refrig',\n        description: 'Mom wants you to clean the refrig before she comes back tonight.'\n      }, {\n        id: 'qwrqrwr',\n        name: 'cook the dinner',\n        description: 'prepare the dinner before 6pm.'\n      }],\n      clickedTask: {\n        id: '',\n        name: '',\n        description: ''\n      }\n    };\n    return _this;\n  } //Event of adding new Task in the TaskTable\n\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"TaskListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addBtn\",\n        onClick: this.handleAddEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"New Task\"), React.createElement(Tasks, {\n        Tasks: this.state.Tasks,\n        onTaskUpdate: this.handleTask.bind(this),\n        onTaskInfo: this.getInfo.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"TaskInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(TaskInfo, {\n        clickedTask: this.state.clickedTask,\n        onTaskUpdate: this.handleTask.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/TaskList/TaskList.js"],"names":["React","Component","Tasks","TaskInfo","TaskList","props","handleAddEvent","e","id","Date","Math","floor","random","toString","Task","name","description","state","push","setState","handleTask","item","target","value","currentTasks","slice","newTasks","map","getInfo","id_array","order","indexOf","clickedTask","console","log","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Tasks from './Tasks/Tasks.js';\nimport TaskInfo from './TaskInfo/TaskInfo.js';\nimport  './TaskList.css';\n\nclass TaskList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            Tasks: [\n                {\n                    id: 'qweqrasr',\n                    name: 'clean the refrig',\n                    description: 'Mom wants you to clean the refrig before she comes back tonight.'\n                },\n                {\n                    id: 'qwrqrwr',\n                    name: 'cook the dinner',\n                    description: 'prepare the dinner before 6pm.'\n                }\n            ],\n\n            clickedTask: {\n                id: '',\n                name: '',\n                description: '',\n            },\n        }\n    }\n\n    //Event of adding new Task in the TaskTable\n    handleAddEvent = (e) => {\n    var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n    var Task = {\n        id: id,\n        name: '',\n        description: '',\n        }\n    \n        this.state.Tasks.push(Task);\n        this.setState(this.state.Tasks);\n    }\n\n    //Event of editing the selected task\n    handleTask = (e) => {\n        var item = {\n            id: e.target.id,\n            name: e.target.value,\n        }\n        \n        var currentTasks = this.state.Tasks.slice();\n        var newTasks = currentTasks.map(\n            function (Task){\n                if (item.id == Task.id){\n                    Task.name = item.name;\n                }\n                return Task;\n            }\n        );\n        this.setState({ Tasks: newTasks });\n    }\n\n    getInfo = (e) => {\n       var id = e.target.id;\n       var Tasks = this.state.Tasks;\n       var id_array = Tasks.map(\n           function (Task){\n               return Task.id\n           }\n       )\n\n       var order = id_array.indexOf(id);\n\n       var clickedTask = this.state.Tasks[order];\n       console.log(this.state.clickedTask.name); \n       this.setState({clickedTask: clickedTask});\n    }\n    \n\n    render(){\n        return (\n            <div>\n                <div className='TaskListDiv'>\n                    <button className='addBtn' onClick={this.handleAddEvent.bind(this)}>New Task</button>\n                    <Tasks \n                        Tasks={this.state.Tasks} \n                        onTaskUpdate={this.handleTask.bind(this)} \n                        onTaskInfo={this.getInfo.bind(this)}\n                    />\n                </div>  \n                <div className='TaskInfo'>\n                    <TaskInfo clickedTask={this.state.clickedTask} onTaskUpdate={this.handleTask.bind(this)}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}