{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/ToDoList/ToDoList.js\";\nimport React, { Component } from 'react';\n\nvar ToDoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoList, _Component);\n\n  function ToDoList() {\n    var _this;\n\n    _classCallCheck(this, ToDoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoList).call(this));\n    _this.state = {};\n    _this.state.tasks = [{\n      id: 1,\n      name: 'clean the refrig'\n    }, {\n      id: 2,\n      name: 'clean the kitchen'\n    }];\n    return _this;\n  }\n\n  _createClass(ToDoList, [{\n    key: \"handleRowDelete\",\n    value: function handleRowDelete(task) {\n      var index = this.state.tasks.indexOf(task);\n      this.state.tasks.splice(index, 1);\n      this.setState(this.state.tasks);\n    }\n  }, {\n    key: \"handleAddEvent\",\n    value: function handleAddEvent(event) {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n      var task = {\n        id: id,\n        name: ''\n      };\n      this.state.tasks.push(task);\n      this.setState(this.state.tasks);\n    }\n  }, {\n    key: \"handleTaskTable\",\n    value: function handleTaskTable(event) {\n      var item = {\n        id: event.target.id,\n        name: event.target.name,\n        value: event.target.value\n      };\n      var tasks = this.state.tasks.slice();\n      var newTasks = tasks.map(function (task) {\n        for (var key in task) {\n          if (key == item.name && task.id == item.id) {\n            task[key] = item.value;\n          }\n        }\n\n        return task;\n      });\n      this.setState({\n        tasks: newTasks\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(TaskTable, {\n        onTaskTableUpdate: this.handleTaskTable.bind(this),\n        onRowAdd: this.handleAddEvent.bind(this),\n        onRowDelete: this.handleRowDelete.bind(this),\n        tasks: this.state.tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ToDoList;\n}(Component);\n\nvar TaskTable =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TaskTable, _Component2);\n\n  function TaskTable() {\n    _classCallCheck(this, TaskTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskTable).apply(this, arguments));\n  }\n\n  _createClass(TaskTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onTaskTableUpdate = this.props.onTaskTableUpdate;\n      var RowDelete = this.props.onRowDelete;\n      var task = this.props.products.map(function () {\n        return React.createElement(TaskRow, {\n          onTaskTableUpdate: onTaskTableUpdate,\n          task: task,\n          onDeleteEvent: RowDelete.bind(_this2),\n          key: task.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.props.onRowAdd,\n        className: \"btn btn-success pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"detail\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, task)));\n    }\n  }]);\n\n  return TaskTable;\n}(Component);\n\nvar TaskRow =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(TaskRow, _Component3);\n\n  function TaskRow() {\n    _classCallCheck(this, TaskRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskRow).apply(this, arguments));\n  }\n\n  _createClass(TaskRow, [{\n    key: \"onDeleteEvent\",\n    value: function onDeleteEvent() {\n      this.props.onDeleteEvent(this.props.task);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", {\n        className: \"eachRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(EditableCell, {\n        onTaskTableUpdate: this.props.onTaskTableUpdate,\n        cellData: {\n          \"type\": \"name\",\n          value: this.props.task.name,\n          id: this.props.task.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        className: \"del-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        onClick: this.onDeleteEvent.bind(this),\n        value: \"X\",\n        className: \"del-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TaskRow;\n}(Component);\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(EditableCell, _Component4);\n\n  function EditableCell() {\n    _classCallCheck(this, EditableCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditableCell).apply(this, arguments));\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: this.props.cellData.type,\n        id: this.props.cellData.id,\n        value: this.props.cellData.value,\n        onChange: this.props.onTaskTableUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditableCell;\n}(Component);","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/ToDoList/ToDoList.js"],"names":["React","Component","ToDoList","state","tasks","id","name","task","index","indexOf","splice","setState","event","Date","Math","floor","random","toString","push","item","target","value","slice","newTasks","map","key","handleTaskTable","bind","handleAddEvent","handleRowDelete","TaskTable","onTaskTableUpdate","props","RowDelete","onRowDelete","products","onRowAdd","TaskRow","onDeleteEvent","EditableCell","cellData","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass ToDoList extends Component {\n    \n    constructor (){\n        super();\n\n        this.state = {};\n        this.state.tasks = [\n            { \n                id: 1,\n                name: 'clean the refrig',\n            },\n            {\n                id: 2,\n                name: 'clean the kitchen',\n            }\n        ]\n        \n    }\n\n    handleRowDelete (task){\n        var index = this.state.tasks.indexOf(task);\n        this.state.tasks.splice(index,1);\n        this.setState(this.state.tasks);\n    }\n\n    handleAddEvent (event){\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n\n        var task = {\n            id: id,\n            name: '',\n        }\n        \n        this.state.tasks.push(task);\n        this.setState(this.state.tasks);\n    }\n\n    handleTaskTable (event){\n        var item = {\n            id: event.target.id,\n            name: event.target.name,\n            value: event.target.value,\n        };\n\n        var tasks = this.state.tasks.slice();\n        \n        var newTasks = tasks.map( (task) => {\n            for ( var key in task){\n                if (key == item.name && task.id == item.id){\n                    task[key] = item.value;\n                }\n            }\n\n            return task;\n        })\n\n        this.setState({ tasks: newTasks})\n    };\n\n    render(){\n        return (\n            <div>\n                <TaskTable \n                    onTaskTableUpdate={this.handleTaskTable.bind(this)}\n                    onRowAdd={this.handleAddEvent.bind(this)}\n                    onRowDelete={this.handleRowDelete.bind(this)}\n                    tasks={this.state.tasks}\n                />\n            </div>    \n        )\n    }\n}\n\nclass TaskTable extends Component {\n    \n    render (){\n        var onTaskTableUpdate = this.props.onTaskTableUpdate;\n        var RowDelete = this.props.onRowDelete;\n        var task = this.props.products.map( () => {\n            return (\n                <TaskRow \n                    onTaskTableUpdate={onTaskTableUpdate}\n                    task={task}\n                    onDeleteEvent={RowDelete.bind(this)}\n                    key={task.id}\n                />\n            )\n        });\n\n        return (\n            <div>\n                <button\n                    type='button'\n                    onClick={this.props.onRowAdd}\n                    className='btn btn-success pull-right'\n                >Add</button>\n                <table>\n                    <thead>\n                        <th>Name</th>\n                        <th>detail</th>\n                    </thead>\n\n                    <tbody>\n                        {task}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass TaskRow extends Component {\n    onDeleteEvent (){\n        this.props.onDeleteEvent(this.props.task);\n    }\n\n    render(){\n        return (\n        <tr className=\"eachRow\">\n            <EditableCell onTaskTableUpdate={this.props.onTaskTableUpdate} cellData={{\n            \"type\": \"name\",\n            value: this.props.task.name,\n            id: this.props.task.id\n            }}/>\n        <td className=\"del-cell\">\n          <input type=\"button\" onClick={this.onDeleteEvent.bind(this)} value=\"X\" className=\"del-btn\"/>\n        </td>\n      </tr>\n        )\n    }\n}\n\nclass EditableCell extends Component {\n\n    render() {\n      return (\n        <td>\n          <input type='text' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onTaskTableUpdate}/>\n        </td>\n      );\n  \n    }\n  \n  }"]},"metadata":{},"sourceType":"module"}