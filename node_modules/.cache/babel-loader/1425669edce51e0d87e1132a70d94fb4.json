{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/TaskList/TaskInfo/TaskName/TaskName.js\";\nimport React, { Component } from 'react';\nimport './TaskName.css';\n\nvar TaskName =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskName, _Component);\n\n  function TaskName() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateMarkButton = function (clickedTask) {\n      if (clickedTask.complete == false) {\n        return React.createElement(\"button\", {\n          className: \"markBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, \"Mark Complete \\u2713\");\n      } else if (clickedTask.complete == true) {\n        return React.createElement(\"button\", {\n          className: \"completedBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"Mark Complete \\u2713\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskName, [{\n    key: \"render\",\n    value: function render() {\n      var onTaskUpdate = this.props.onTaskUpdate;\n      var clickedTask = this.props.clickedTask;\n      var toggleComplete = this.props.toggleComplete;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"labelName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Name\"), generateMarkButton), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"TaskName\",\n        value: clickedTask.name,\n        placeholder: \"Write a task name\",\n        onChange: onTaskUpdate,\n        id: clickedTask.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TaskName;\n}(Component);\n\nexport default TaskName;","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/TaskList/TaskInfo/TaskName/TaskName.js"],"names":["React","Component","TaskName","generateMarkButton","clickedTask","complete","onTaskUpdate","props","toggleComplete","name","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,gBAAP;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAEFC,kB,GAAqB,UAAEC,WAAF,EAAmB;AACpC,UAAIA,WAAW,CAACC,QAAZ,IAAwB,KAA5B,EAAkC;AAC9B,eACI;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ;AAGH,OAJD,MAIO,IAAID,WAAW,CAACC,QAAZ,IAAwB,IAA5B,EAAiC;AACpC,eACI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ;AAGH;AACJ,K;;;;;;;6BAEO;AACJ,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWD,YAA9B;AACA,UAAIF,WAAW,GAAG,KAAKG,KAAL,CAAWH,WAA7B;AACA,UAAII,cAAc,GAAG,KAAKD,KAAL,CAAWC,cAAhC;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKL,kBAFL,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,KAAK,EAAEC,WAAW,CAACK,IAFvB;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,QAAQ,EAAEH,YAJd;AAKI,QAAA,EAAE,EAAEF,WAAW,CAACM,EALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,CADJ;AAiBH;;;;EApCkBT,S;;AAuCvB,eAAeC,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport './TaskName.css';\n\nclass TaskName extends Component {\n\n    generateMarkButton = ( clickedTask ) => {\n        if (clickedTask.complete == false){\n            return (\n                <button className='markBtn'>Mark Complete ✓</button>\n            )\n        } else if (clickedTask.complete == true){\n            return (\n                <button className='completedBtn' >Mark Complete ✓</button>\n            )\n        }\n    }\n    \n    render(){\n        var onTaskUpdate = this.props.onTaskUpdate;\n        var clickedTask = this.props.clickedTask;\n        var toggleComplete = this.props.toggleComplete;\n\n        return (\n            <div>\n                <header className='labelName'>\n                    <label>Name</label>\n                    {generateMarkButton}\n                </header>\n                <form>\n                    <textarea\n                        className='TaskName'\n                        value={clickedTask.name}\n                        placeholder='Write a task name'\n                        onChange={onTaskUpdate}\n                        id={clickedTask.id}\n                    ></textarea>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default TaskName;"]},"metadata":{},"sourceType":"module"}