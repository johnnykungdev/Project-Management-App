{"ast":null,"code":"import _classCallCheck from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Che-Yikung/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Che-Yikung/Desktop/todolist/src/components/ToDoList/ToDoList.js\";\nimport React, { Component } from 'react';\n\nvar ToDoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoList, _Component);\n\n  function ToDoList() {\n    var _this;\n\n    _classCallCheck(this, ToDoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoList).call(this));\n    _this.state = {};\n    _this.state.tasks = [];\n    return _this;\n  }\n\n  _createClass(ToDoList, [{\n    key: \"handleRowDelete\",\n    value: function handleRowDelete(task) {\n      var index = this.state.tasks.indexOf(task);\n      this.state.tasks.splice(index, 1);\n      this.setState(this.state.tasks);\n    }\n  }, {\n    key: \"handleAddEvent\",\n    value: function handleAddEvent(event) {\n      var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n      var task = {\n        id: 1,\n        name: ''\n      };\n      this.state.tasks.push(task);\n      this.setState(this.state.tasks);\n    }\n  }, {\n    key: \"handleTaskTable\",\n    value: function handleTaskTable(event) {\n      var item = {\n        id: event.target.id,\n        name: event.target.name,\n        value: event.target.value\n      };\n      var tasks = this.state.tasks.slice();\n      var newTasks = tasks.map(function (task) {\n        for (var key in task) {\n          if (key == item.name && task.id == item.id) {\n            task[key] = item.value;\n          }\n        }\n\n        return task;\n      });\n      this.setState({\n        tasks: newTasks\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(TaskTable, {\n        onTaskTableUpdate: this.handleTaskTable.bind(this),\n        onRowAdd: this.handleAddEvent.bind(this),\n        onRowDelete: this.handleRowDelete.bind(this),\n        tasks: this.state.tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ToDoList;\n}(Component);","map":{"version":3,"sources":["/Users/Che-Yikung/Desktop/todolist/src/components/ToDoList/ToDoList.js"],"names":["React","Component","ToDoList","state","tasks","task","index","indexOf","splice","setState","event","id","Date","Math","floor","random","toString","name","push","item","target","value","slice","newTasks","map","key","handleTaskTable","bind","handleAddEvent","handleRowDelete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,Q;;;;;AAEF,sBAAc;AAAA;;AAAA;;AACV;AAEA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKA,KAAL,CAAWC,KAAX,GAAmB,EAAnB;AAJU;AAOb;;;;oCAEgBC,I,EAAK;AAClB,UAAIC,KAAK,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,OAAjB,CAAyBF,IAAzB,CAAZ;AACA,WAAKF,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,CAAwBF,KAAxB,EAA8B,CAA9B;AACA,WAAKG,QAAL,CAAc,KAAKN,KAAL,CAAWC,KAAzB;AACH;;;mCAEeM,K,EAAM;AAClB,UAAIC,EAAE,GAAG,CAAC,CAAE,IAAIC,IAAJ,EAAF,GAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAhB,EAAoDC,QAApD,CAA6D,EAA7D,CAAT;AAEA,UAAIX,IAAI,GAAG;AACPM,QAAAA,EAAE,EAAE,CADG;AAEPM,QAAAA,IAAI,EAAE;AAFC,OAAX;AAKA,WAAKd,KAAL,CAAWC,KAAX,CAAiBc,IAAjB,CAAsBb,IAAtB;AACA,WAAKI,QAAL,CAAc,KAAKN,KAAL,CAAWC,KAAzB;AACH;;;oCAEgBM,K,EAAM;AACnB,UAAIS,IAAI,GAAG;AACPR,QAAAA,EAAE,EAAED,KAAK,CAACU,MAAN,CAAaT,EADV;AAEPM,QAAAA,IAAI,EAAEP,KAAK,CAACU,MAAN,CAAaH,IAFZ;AAGPI,QAAAA,KAAK,EAAEX,KAAK,CAACU,MAAN,CAAaC;AAHb,OAAX;AAMA,UAAIjB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBkB,KAAjB,EAAZ;AAEA,UAAIC,QAAQ,GAAGnB,KAAK,CAACoB,GAAN,CAAW,UAACnB,IAAD,EAAU;AAChC,aAAM,IAAIoB,GAAV,IAAiBpB,IAAjB,EAAsB;AAClB,cAAIoB,GAAG,IAAIN,IAAI,CAACF,IAAZ,IAAoBZ,IAAI,CAACM,EAAL,IAAWQ,IAAI,CAACR,EAAxC,EAA2C;AACvCN,YAAAA,IAAI,CAACoB,GAAD,CAAJ,GAAYN,IAAI,CAACE,KAAjB;AACH;AACJ;;AAED,eAAOhB,IAAP;AACH,OARc,CAAf;AAUA,WAAKI,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEmB;AAAT,OAAd;AACH;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE,KAAKG,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CADvB;AAEI,QAAA,QAAQ,EAAE,KAAKC,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAFd;AAGI,QAAA,WAAW,EAAE,KAAKE,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAHjB;AAII,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH;;;;EA9DkBH,S","sourcesContent":["import React, {Component} from 'react';\n\nclass ToDoList extends Component {\n    \n    constructor (){\n        super();\n\n        this.state = {};\n        this.state.tasks = [\n        ]\n        \n    }\n\n    handleRowDelete (task){\n        var index = this.state.tasks.indexOf(task);\n        this.state.tasks.splice(index,1);\n        this.setState(this.state.tasks);\n    }\n\n    handleAddEvent (event){\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n\n        var task = {\n            id: 1,\n            name: '',\n        }\n        \n        this.state.tasks.push(task);\n        this.setState(this.state.tasks);\n    }\n\n    handleTaskTable (event){\n        var item = {\n            id: event.target.id,\n            name: event.target.name,\n            value: event.target.value,\n        };\n\n        var tasks = this.state.tasks.slice();\n        \n        var newTasks = tasks.map( (task) => {\n            for ( var key in task){\n                if (key == item.name && task.id == item.id){\n                    task[key] = item.value;\n                }\n            }\n\n            return task;\n        })\n\n        this.setState({ tasks: newTasks})\n    };\n\n    render(){\n        return (\n            <div>\n                <TaskTable \n                    onTaskTableUpdate={this.handleTaskTable.bind(this)}\n                    onRowAdd={this.handleAddEvent.bind(this)}\n                    onRowDelete={this.handleRowDelete.bind(this)}\n                    tasks={this.state.tasks}\n                />\n            </div>    \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}